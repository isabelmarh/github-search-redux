{"version":3,"sources":["components/layouts/Navbar.js","components/layouts/Spinner.gif","components/layouts/Spinner.js","components/layouts/Alert.js","components/layouts/About.js","components/users/UserItem.js","actions/types.js","components/users/Users.js","actions/github.js","components/users/Search.js","actions/alert.js","components/users/RepoItem.js","components/users/Repos.js","components/users/User.js","reducers/alertReducer.js","reducers/githubReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["connect","state","icon","github","title","className","to","Spinner","src","SpinImg","alt","style","width","margin","display","alert","type","msg","About","UserItem","login","avatar_url","SET_ALERT","SET_USERS","SET_LOADING","RESET_LOADING","SEARCH_USERS","CLEAR_USERS","GET_USER","SET_REPOS","users","loading","allUsers","dispatch","a","axios","get","res","payload","data","useEffect","gridTemplateColumns","gridGap","map","user","html_url","id","searchUsers","text","items","showAlert","setTimeout","clearUsers","useState","setText","onSubmit","e","preventDefault","name","placeholder","value","onChange","target","length","onClick","RepoItem","repo","href","Repos","repos","getUser","getUserRepos","match","props","console","log","params","location","bio","blog","company","followers","following","public_repos","public_gists","hireable","action","initialState","combineReducers","middleware","thunk","store","createStore","rootreducer","composeWithDevTools","applyMiddleware","App","exact","path","render","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"+NAiCeA,eAJS,SAACC,GAAD,MAAY,CAClCC,KAAMD,EAAME,OAAOD,KACnBE,MAAOH,EAAME,OAAOC,SAEPJ,EA5BA,SAAC,GAAqB,IAAnBE,EAAkB,EAAlBA,KAAME,EAAY,EAAZA,MACtB,OACE,sBAAKC,UAAU,oBAAf,UACE,+BACE,mBAAGA,UAAWH,IACbE,KAEH,+BACE,6BACE,cAAC,IAAD,CAAME,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,8BCjBK,MAA0B,oCCe1BC,EAZC,WACd,OACE,mCACE,qBACEC,IAAKC,EACLC,IAAI,UACJC,MAAO,CAAEC,MAAO,QAASC,OAAQ,OAAQC,QAAS,cCQ3Cd,eAHS,SAACC,GAAD,MAAY,CAClCc,MAAOd,EAAMc,SAEAf,EAdD,SAAC,GAAe,IAAbe,EAAY,EAAZA,MACf,OACY,OAAVA,GACE,sBAAKV,UAAS,sBAAiBU,EAAMC,MAArC,UACE,mBAAGX,UAAU,uBACZU,EAAME,UCGAC,EATD,WACZ,OACE,gCACE,4CACA,2DCsBSC,EAxBE,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,MAAOC,EAAiB,EAAjBA,WACzB,OACE,sBAAKhB,UAAU,mBAAf,UACE,qBACEG,IAAKa,EACLX,IAAI,GACJL,UAAU,aACVM,MAAO,CAAEC,MAAO,WAElB,6BAAKQ,IACL,8BACE,cAAC,IAAD,CAAMd,GAAE,gBAAWc,GAASf,UAAU,2BAAtC,kC,0CCfKiB,EAAY,YACZC,EAAY,YACZC,EAAc,cACdC,EAAgB,gBAChBC,EAAe,eACfC,EAAc,cACdC,EAAW,WACXC,EAAY,YCuCV7B,eALS,SAACC,GAAD,MAAY,CAClC6B,MAAO7B,EAAME,OAAO2B,MACpBC,QAAS9B,EAAME,OAAO4B,WAGgB,CAAEC,SC3ClB,WACpB,8CAAO,WAAOC,GAAP,eAAAC,EAAA,6DACHD,EAAS,CAAEjB,KAAMQ,IADd,SAEeW,IAAMC,IAAI,gCAFzB,OAEGC,EAFH,OAGHJ,EAAS,CAAEjB,KAAMO,EAAWe,QAASD,EAAIE,OACzCN,EAAS,CAAEjB,KAAMS,IAJd,2CAAP,wDD0CWzB,EAvCD,SAAC,GAAkC,IAAhC+B,EAA+B,EAA/BA,QAASD,EAAsB,EAAtBA,MAAOE,EAAe,EAAfA,SAC/BQ,qBAAU,WACRR,MACC,CAACA,IAOJ,OACE,mCACGD,EACC,cAAC,EAAD,IAEE,qBAAKpB,MAVK,CAChBG,QAAS,OACT2B,oBAAqB,gBACrBC,QAAS,QAOH,SACGZ,EAAMa,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,CACExB,MAAOwB,EAAKxB,MACZyB,SAAUD,EAAKC,SACfxB,WAAYuB,EAAKvB,YACZuB,EAAKE,c,QEgCX9C,eAJS,SAACC,GAAD,MAAY,CAClC6B,MAAO7B,EAAME,OAAO2B,SAGkB,CAAEiB,YDhDf,SAACC,GACxB,8CAAO,WAAOf,GAAP,eAAAC,EAAA,6DACHD,EAAS,CAAEjB,KAAMQ,IADd,SAEeW,IAAMC,IAAN,gDAAmDY,IAFlE,OAEGX,EAFH,OAGHJ,EAAS,CAAEjB,KAAMU,EAAcY,QAASD,EAAIE,KAAKU,QACjDhB,EAAS,CAAEjB,KAAMS,IAJd,2CAAP,uDC+CmDyB,UC1D9B,SAACjC,EAAKD,GAC3B,OAAO,SAACiB,GACJA,EAAS,CAAEjB,KAAMM,EAAWgB,QAAS,CAAErB,MAAKD,UAC5CmC,YAAW,WACPlB,EAAS,CAAEjB,KAAMM,EAAWgB,QAAS,SACtC,ODqDuDc,WDvCxC,WACtB,OAAO,SAACnB,GACJA,EAAS,CAAEjB,KAAMW,IACjBM,EAAS,CAAEjB,KAAMO,EAAWe,QAAS,QCoC9BtC,EAtDA,SAAC,GAAmD,IAAjD8B,EAAgD,EAAhDA,MAAOiB,EAAyC,EAAzCA,YAAaK,EAA4B,EAA5BA,WAAYF,EAAgB,EAAhBA,UAAgB,EACxCG,mBAAS,IAD+B,mBACzDL,EADyD,KACnDM,EADmD,KAchE,OACE,gCACE,uBAAMjD,UAAU,OAAOkD,SAVL,SAACC,GAErB,GADAA,EAAEC,iBACW,KAATT,EACF,OAAOE,EAAU,wBAAyB,UAE5CH,EAAYC,IAKV,UACE,uBACEhC,KAAK,OACL0C,KAAK,OACLC,YAAY,eACZC,MAAOZ,EACPa,SAnBc,SAACL,GACrBF,EAAQE,EAAEM,OAAOF,UAoBb,uBACE5C,KAAK,SACL4C,MAAM,SACNvD,UAAU,8BAGbyB,EAAMiC,OAAS,GACd,wBACE1D,UAAU,0BACV2D,QAAS,WACPZ,KAHJ,yB,uBEpBOa,EAdE,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAClB,OACE,qBAAK7D,UAAU,OAAf,SACE,6BACE,mBAAG8D,KAAMD,EAAKrB,SAAd,SAAyBqB,EAAKR,YCKvBU,EARD,SAAC,GACb,OAD2B,EAAZC,MACF1B,KAAI,SAACuB,GAAD,OAAU,cAAC,EAAD,CAAUA,KAAMA,GAAWA,EAAKpB,QCkH9C9C,eANS,SAACC,GAAD,MAAY,CAClC2C,KAAM3C,EAAME,OAAOyC,KACnBb,QAAS9B,EAAME,OAAO4B,QACtBsC,MAAOpE,EAAME,OAAOkE,SAGkB,CAAEC,QL3FnB,SAAClD,GACpB,8CAAO,WAAOa,GAAP,eAAAC,EAAA,6DACHD,EAAS,CAAEjB,KAAMQ,IADd,SAEeW,IAAMC,IAAN,uCAA0ChB,IAFzD,OAEGiB,EAFH,OAGHJ,EAAS,CAAEjB,KAAMY,EAAUU,QAASD,EAAIE,OACxCN,EAAS,CAAEjB,KAAMS,IAJd,2CAAP,uDK0F+C8C,aLlFvB,SAACnD,GACzB,8CAAO,WAAOa,GAAP,eAAAC,EAAA,6DACHD,EAAS,CAAEjB,KAAMQ,IADd,SAEeW,IAAMC,IAAN,sCAAyChB,EAAzC,uCAFf,OAEGiB,EAFH,OAGHJ,EAAS,CAAEjB,KAAMa,EAAWS,QAASD,EAAIE,OACzCN,EAAS,CAAEjB,KAAMS,IAJd,2CAAP,wDKiFWzB,EA9GF,SAAC,GAAuE,IAArEsE,EAAoE,EAApEA,QAAS1B,EAA2D,EAA3DA,KAAMb,EAAqD,EAArDA,QAASyC,EAA4C,EAA5CA,MAAOD,EAAqC,EAArCA,aAAcF,EAAuB,EAAvBA,MAAUI,EAAa,2EAOlF,GANFC,QAAQC,IAAIF,GACVjC,qBAAU,WACR8B,EAAQE,EAAMI,OAAOxD,OACrBmD,EAAaC,EAAMI,OAAOxD,SAEzB,IACCW,EACF,OAAO,cAAC,EAAD,IARyE,IAWhF2B,EAaEd,EAbFc,KACArC,EAYEuB,EAZFvB,WACAwD,EAWEjC,EAXFiC,SACAC,EAUElC,EAVFkC,IACAC,EASEnC,EATFmC,KACA3D,EAQEwB,EARFxB,MACAyB,EAOED,EAPFC,SACAmC,EAMEpC,EANFoC,QACAC,EAKErC,EALFqC,UACAC,EAIEtC,EAJFsC,UACAC,EAGEvC,EAHFuC,aACAC,EAEExC,EAFFwC,aACAC,EACEzC,EADFyC,SAEF,OACE,qCACE,cAAC,IAAD,CAAM/E,GAAG,IAAID,UAAU,gBAAvB,4BADF,aAIa,IACVgF,EACC,mBAAGhF,UAAU,8BAEX,mBAAGA,UAAU,oCAEjB,sBAAKA,UAAU,cAAf,UACE,sBAAKA,UAAU,aAAf,UACE,qBACEG,IAAKa,EACLX,IAAKU,EACLf,UAAU,YACVM,MAAO,CAAEC,MAAO,WAElB,6BAAK8C,IACL,4CAAemB,QAEjB,gCACGC,GACC,qCACE,qCACA,4BAAIA,OAGR,mBAAGX,KAAMtB,EAAUxC,UAAU,oBAA7B,4BAGA,+BACE,6BACGe,GACC,qCACE,iDACCA,OAIP,6BACG4D,GACC,qCACE,gDACCA,OAIP,6BACGD,GACC,qCACE,6CACCA,gBAOb,sBAAK1E,UAAU,mBAAf,UACE,sBAAKA,UAAU,sBAAf,wBAAiD4E,KACjD,sBAAK5E,UAAU,sBAAf,wBAAiD6E,KACjD,sBAAK7E,UAAU,oBAAf,2BAAkD8E,KAClD,sBAAK9E,UAAU,sBAAf,4BAAqD+E,QAEvD,cAAC,EAAD,CAAOf,MAAOA,U,wBCxFLtD,EATD,WAAmC,IAAlCd,EAAiC,uDAF3B,KAEgBqF,EAAW,uCACpCtE,EAAkBsE,EAAlBtE,KAAMsB,EAAYgD,EAAZhD,QACd,OAAQtB,GACJ,KAAKM,EACD,OAAOgB,EACX,QACI,OAAOrC,ICPbsF,EAAe,CACjBzD,MAAO,GACPC,SAAS,EACTa,KAAM,GACNyB,MAAO,GACPjE,MAAO,aACPF,KAAM,kBA6CKC,EA1CA,WAAmC,IAAlCF,EAAiC,uDAAzBsF,EAAcD,EAAW,uCACrCtE,EAAkBsE,EAAlBtE,KAAMsB,EAAYgD,EAAZhD,QACd,OAAQtB,GACJ,KAAKO,EACD,OAAO,2BACAtB,GADP,IAEI6B,MAAOQ,IAEf,KAAKd,EACD,OAAO,2BACAvB,GADP,IAEI8B,SAAS,IAEjB,KAAKN,EACD,OAAO,2BACAxB,GADP,IAEI8B,SAAS,IAEjB,KAAKL,EAKL,KAAKC,EACD,OAAO,2BACA1B,GADP,IAEI6B,MAAOQ,IAEf,KAAKV,EACD,OAAO,2BACA3B,GADP,IAEI2C,KAAMN,IAEd,KAAKT,EACD,OAAO,2BACA5B,GADP,IAEIoE,MAAO/B,IAEf,QACI,OAAOrC,IC9CJuF,4BAAgB,CAAEzE,QAAOZ,WCElCsF,EAAa,CAACC,KAILC,EAFDC,sBAAYC,EAHL,GAGgCC,8BAAoBC,kBAAe,WAAf,EAAmBN,KCqC7EO,EAlCH,WACV,OACE,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAD,UACE,sBAAKtF,UAAU,MAAf,UACE,cAAC,EAAD,CAAQD,MAAM,aAAaF,KAAK,mBAChC,sBAAKG,UAAU,YAAf,UACE,cAAC,EAAD,IACA,eAAC,IAAD,WACE,cAAC,IAAD,CACE4F,OAAK,EACLC,KAAK,IACLC,OAAQ,kBACN,qCACE,cAAC,EAAD,IACA,cAAC,EAAD,UAIN,cAAC,IAAD,CAAOF,OAAK,EAACC,KAAK,SAASE,UAAWlF,IACtC,cAAC,IAAD,CACEgF,KAAK,eACLC,OAAQ,SAAC1B,GAAD,OACN,cAAC,EAAD,eAAUA,qBCtBb4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASX,OACP,cAAC,IAAMY,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.56e0c1f6.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\n\nconst Navbar = ({ icon, title }) => {\n  return (\n    <nav className=\"navbar bg-primary\">\n      <h1>\n        <i className={icon} />\n        {title}\n      </h1>\n      <ul>\n        <li>\n          <Link to=\"/\">Home</Link>\n        </li>\n        <li>\n          <Link to=\"/about\">About</Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nNavbar.propTypes = {\n  icon: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  icon: state.github.icon,\n  title: state.github.title,\n});\nexport default connect(mapStateToProps)(Navbar);\n","export default __webpack_public_path__ + \"static/media/Spinner.6ad68e6f.gif\";","import React from \"react\";\nimport SpinImg from \"./Spinner.gif\";\n\nconst Spinner = () => {\n  return (\n    <>\n      <img\n        src={SpinImg}\n        alt=\"loading\"\n        style={{ width: \"200px\", margin: \"auto\", display: \"block\" }}\n      />\n    </>\n  );\n};\n\nexport default Spinner;\n","import React from \"react\";\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alert }) => {\n  return (\n    alert !== null && (\n      <div className={`alert alert-${alert.type}`}>\n        <i className=\"fas fa-info-circle\" />\n        {alert.msg}\n      </div>\n    )\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  alert: state.alert\n});\nexport default connect(mapStateToProps)(Alert);\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <h1>About Page</h1>\n      <p>This is the about page</p>\n    </div>\n  );\n};\n\nexport default About;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nconst UserItem = ({ login, avatar_url }) => {\n  return (\n    <div className=\"card text-center\">\n      <img\n        src={avatar_url}\n        alt=\"\"\n        className=\" round-img\"\n        style={{ width: \"120px\" }}\n      />\n      <h3>{login}</h3>\n      <div>\n        <Link to={`/user/${login}`} className=\"btn btn-dark btn-sm my-1\">\n          Github Profile\n        </Link>\n      </div>\n    </div>\n  );\n};\nUserItem.propTypes = {\n  login: PropTypes.string.isRequired,\n  html_url: PropTypes.string.isRequired,\n  avatar_url: PropTypes.string.isRequired,\n};\n\nexport default UserItem;\n","export const SET_ALERT = \"SET_ALERT\";\nexport const SET_USERS = \"SET_USERS\";\nexport const SET_LOADING = \"SET_LOADING\";\nexport const RESET_LOADING = \"RESET_LOADING\";\nexport const SEARCH_USERS = \"SEARCH_USERS\";\nexport const CLEAR_USERS = \"CLEAR_USERS\";\nexport const GET_USER = \"GET_USER\";\nexport const SET_REPOS = \"SET_REPOS\";\n","import React, { useEffect } from \"react\";\nimport UserItem from \"./UserItem\";\nimport { Spinner } from \"../layouts\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { allUsers } from '../../actions/github';\n\nconst Users = ({ loading, users, allUsers }) => {\n  useEffect(() => {\n    allUsers();\n  }, [allUsers]);\n\n  const userStyle = {\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3,1fr)\",\n    gridGap: \"1rem\",\n  };\n  return (\n    <>\n      {loading ? (\n        <Spinner />\n      ) : (\n          <div style={userStyle}>\n            {users.map((user) => (\n              <UserItem\n                login={user.login}\n                html_url={user.html_url}\n                avatar_url={user.avatar_url}\n                key={user.id}\n              />\n            ))}\n          </div>\n        )}\n    </>\n  );\n};\nUsers.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  users: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.github.users,\n  loading: state.github.loading\n});\n\nexport default connect(mapStateToProps, { allUsers })(Users);\n","import axios from 'axios';\nimport { SET_USERS, SET_LOADING, RESET_LOADING, SEARCH_USERS, CLEAR_USERS, GET_USER, SET_REPOS } from './types';\n\nexport const allUsers = () => {\n    return async (dispatch) => {\n        dispatch({ type: SET_LOADING });\n        const res = await axios.get('https://api.github.com/users');\n        dispatch({ type: SET_USERS, payload: res.data });\n        dispatch({ type: RESET_LOADING });\n    };\n};\n\nexport const searchUsers = (text) => {\n    return async (dispatch) => {\n        dispatch({ type: SET_LOADING });\n        const res = await axios.get(`https://api.github.com/search/users?q=${text}`);\n        dispatch({ type: SEARCH_USERS, payload: res.data.items });\n        dispatch({ type: RESET_LOADING });\n    };\n};\n\nexport const clearUsers = () => {\n    return (dispatch) => {\n        dispatch({ type: CLEAR_USERS });\n        dispatch({ type: SET_USERS, payload: [] });\n    };\n};\n\nexport const getUser = (login) => {\n    return async (dispatch) => {\n        dispatch({ type: SET_LOADING });\n        const res = await axios.get(`https://api.github.com/users/${login}`);\n        dispatch({ type: GET_USER, payload: res.data });\n        dispatch({ type: RESET_LOADING });\n    };\n};\n\nexport const getUserRepos = (login) => {\n    return async (dispatch) => {\n        dispatch({ type: SET_LOADING });\n        const res = await axios.get(`http://api.github.com/users/${login}/repos?per_page=5&sort=created:asc`);\n        dispatch({ type: SET_REPOS, payload: res.data });\n        dispatch({ type: RESET_LOADING });\n    };\n};\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { showAlert } from '../../actions/alert';\nimport { searchUsers, clearUsers } from '../../actions/github';\n\nconst Search = ({ users, searchUsers, clearUsers, showAlert }) => {\n  const [text, setText] = useState(\"\");\n\n  const changeHandler = (e) => {\n    setText(e.target.value);\n  };\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (text === \"\") {\n      return showAlert(\"Invalid Search String\", \"danger\");\n    }\n    searchUsers(text);\n  };\n\n  return (\n    <div>\n      <form className=\"form\" onSubmit={submitHandler}>\n        <input\n          type=\"text\"\n          name=\"text\"\n          placeholder=\"Search Users\"\n          value={text}\n          onChange={changeHandler}\n        />\n        <input\n          type=\"submit\"\n          value=\"Search\"\n          className=\"btn btn-dark btn-block\"\n        />\n      </form>\n      {users.length > 0 && (\n        <button\n          className=\"btn btn-light btn-block\"\n          onClick={() => {\n            clearUsers();\n          }}\n        >\n          Clear\n        </button>\n      )}\n    </div>\n  );\n};\n\nSearch.propTypes = {\n  searchUsers: PropTypes.func.isRequired,\n  clearUsers: PropTypes.func.isRequired,\n  users: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  users: state.github.users\n})\n\nexport default connect(mapStateToProps, { searchUsers, showAlert, clearUsers })(Search);\n","import { SET_ALERT } from \"./types\";\n\nexport const showAlert = (msg, type) => {\n    return (dispatch) => {\n        dispatch({ type: SET_ALERT, payload: { msg, type } });\n        setTimeout(() => {\n            dispatch({ type: SET_ALERT, payload: null });\n        }, 4000);\n    };\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst RepoItem = ({ repo }) => {\n  return (\n    <div className=\"card\">\n      <h3>\n        <a href={repo.html_url}>{repo.name}</a>\n      </h3>\n    </div>\n  );\n};\n\nRepoItem.propTypes = {\n  repos: PropTypes.object.isRequired,\n};\n\nexport default RepoItem;\n","import React from \"react\";\nimport RepoItem from \"./RepoItem\";\nimport PropTypes from \"prop-types\";\n\nconst Repos = ({ repos }) => {\n  return repos.map((repo) => <RepoItem repo={repo} key={repo.id} />);\n};\n\nRepos.propTypes = {\n  repos: PropTypes.array.isRequired,\n};\n\nexport default Repos;\n","import React, { useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Spinner } from \"../layouts\";\nimport Repos from \"./Repos\";\nimport PropTypes from \"prop-types\";\nimport { connect } from 'react-redux';\nimport { getUser, getUserRepos } from '../../actions/github';\n\n\nconst User = ({ getUser, user, loading, match, getUserRepos, repos, ...props } ) => {\nconsole.log(props)\n  useEffect(() => {\n    getUser(match.params.login);\n    getUserRepos(match.params.login);\n    // eslint-disable-next-line\n  }, []);\n  if (loading) {\n    return <Spinner />;\n  }\n  const {\n    name,\n    avatar_url,\n    location,\n    bio,\n    blog,\n    login,\n    html_url,\n    company,\n    followers,\n    following,\n    public_repos,\n    public_gists,\n    hireable,\n  } = user;\n  return (\n    <>\n      <Link to=\"/\" className=\"btn btn-light\">\n        Back to Search\n      </Link>\n      Hireable :{\" \"}\n      {hireable ? (\n        <i className=\"fas fa-check text-success\" />\n      ) : (\n          <i className=\"fas fa-times-circle text-danger\" />\n        )}\n      <div className=\"card grid-2\">\n        <div className=\"all-center\">\n          <img\n            src={avatar_url}\n            alt={login}\n            className=\"round-img\"\n            style={{ width: \"150px\" }}\n          />\n          <h1>{name}</h1>\n          <p>Location : {location}</p>\n        </div>\n        <div>\n          {bio && (\n            <>\n              <h3>Bio</h3>\n              <p>{bio}</p>\n            </>\n          )}\n          <a href={html_url} className=\"btn btn-dark my-1\">\n            Github Profile\n          </a>\n          <ul>\n            <li>\n              {login && (\n                <>\n                  <strong>Username : </strong>\n                  {login}\n                </>\n              )}\n            </li>\n            <li>\n              {company && (\n                <>\n                  <strong>Company : </strong>\n                  {company}\n                </>\n              )}\n            </li>\n            <li>\n              {blog && (\n                <>\n                  <strong>Blog : </strong>\n                  {blog}\n                </>\n              )}\n            </li>\n          </ul>\n        </div>\n      </div>\n      <div className=\"card text-center\">\n        <div className=\"badge badge-primary\">Followers :{followers}</div>\n        <div className=\"badge badge-success\">Following :{following}</div>\n        <div className=\"badge badge-light\">Public Repos :{public_repos}</div>\n        <div className=\"badge badge-primary\">Public Gists : {public_gists}</div>\n      </div>\n      <Repos repos={repos} />\n    </>\n  );\n};\n\nUser.propTypes = {\n  getUser: PropTypes.func.isRequired,\n  getUserRepos: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  repos: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  user: state.github.user,\n  loading: state.github.loading,\n  repos: state.github.repos\n});\n\nexport default connect(mapStateToProps, { getUser, getUserRepos })(User);\n","import { SET_ALERT } from \"../actions/types\";\nconst initialState = null;\n\nconst alert = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_ALERT:\n            return payload;\n        default:\n            return state;\n    }\n};\nexport default alert;\n\n","import { SET_USERS, SET_LOADING, RESET_LOADING, SEARCH_USERS, CLEAR_USERS, GET_USER, SET_REPOS } from \"../actions/types\";\n\nconst initialState = {\n    users: [],\n    loading: false,\n    user: {},\n    repos: [],\n    title: \"Github App\",\n    icon: \"fab-fa-twitter\"\n};\n\nconst github = (state = initialState, action) => {\n    const { type, payload } = action;\n    switch (type) {\n        case SET_USERS:\n            return {\n                ...state,\n                users: payload,\n            };\n        case SET_LOADING:\n            return {\n                ...state,\n                loading: true\n            };\n        case RESET_LOADING:\n            return {\n                ...state,\n                loading: false\n            };\n        case SEARCH_USERS:\n            return {\n                ...state,\n                users: payload\n            };\n        case CLEAR_USERS:\n            return {\n                ...state,\n                users: payload\n            };\n        case GET_USER:\n            return {\n                ...state,\n                user: payload\n            };\n        case SET_REPOS:\n            return {\n                ...state,\n                repos: payload\n            };\n        default:\n            return state;\n    }\n};\nexport default github;\n","import { combineReducers } from 'redux'\nimport alert from './alertReducer';\nimport github from './githubReducer';\n\nexport default combineReducers({ alert, github})","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootreducer from './reducers';\n\nconst initialState = {};\nconst middleware = [thunk];\n\nconst store = createStore(rootreducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\n\nexport default store;\n","import React from \"react\";\nimport { Navbar, Alert, About } from \"./components/layouts\";\nimport { Users, Search } from \"./components/users\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport User from \"./components/users/User\";\n\n//Redux \nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <Router>\n        <div className=\"App\">\n          <Navbar title=\"Github App\" icon=\"fab fa-twitter\" />\n          <div className=\"container\">\n            <Alert />\n            <Switch>\n              <Route\n                exact\n                path=\"/\"\n                render={() => (\n                  <>\n                    <Search/>\n                    <Users />\n                  </>\n                )}\n              />\n              <Route exact path=\"/about\" component={About} />\n              <Route\n                path=\"/user/:login\"\n                render={(props) => (\n                  <User {...props}/>\n                )}\n              />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}